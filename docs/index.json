[{"uri":"\\posts\\2017review","tags":["总结"],"content":"2017 年 总结 2017 年 是 我 改变 的 一个 重要 的 一年 . 暑假 的 时候 决定 考研 , 开学 后 , 看 了 会 书 , 但是 被 Android 比赛 耽搁 了 . 希望 在 2018 年 继续 专心 复习 .   离 2018 年 考研 还有 有 11 个 月 多 了 , 虽然 时间 还有 很多 , 但是 不知不觉 就 会 过去 了 .   而且 院校 我 还 没有 真正 的 去 了解 过 , 不 知道 考 哪 所 学校 , 寒假 要 多 了解 一下 .  下半年 在 学 Java 和   自学 了 Android.  学 了 点 Android 就 有点 沾沾自喜 , 这 是 不 应该 的 . Java 学 了 , 但是 代码 , 做 题目 的 时候 还是 很多 不会 , 面向对象 和 API 还是 模模糊糊 . 希望 明年 可以 多 复习 复习 , 多 看书 , 多 实践 .2018 的 考研 计划 :  每星期 都 制定 大 计划 , 写 在 纸条 上 , 完成 计划 就 划掉 一项 .  每天 也 要 制定 小 计划 , 时刻 监督 自己   英语单词 要 继续 背 , 放假 前 看 完   王 江 涛 的 两遍 . 寒假 里 被 新东方 绿色 的 乱序 .  英语 阅读 要 多 做 多 看   数学 :  复习 全书 和 看 视频   专业课 : 寒假 先 搞定 数据结构 , 参加 三月份 的 PAT 考试 .  寒假 回来 后 看 其他 三门 .  政治 9 月份 开始 看 时间 安排 上课 课余时间 看 英语 不 上课 , 早上 看 数学 , 下午 看 专业课 , 晚上 看 英语 主要 每天 制定 小 计划 , 一周 一个 大 计划 , 一个月 一个 大大 计划 每天 时间 都 要 规划 好 寒假 计划 数据结构   参加 三月份 PAT, 考 出 好 成绩 英语单词 不能 忘 , 数学 可以 看 会 线 代 .Java 复习 在 寒假 看 会 Python","title":"2017 年 总结 ","oriTitle":"2017年总结"},{"uri":"\\posts\\android-change-underline-color","tags":["EditText","Android"],"content":"Android EditText 下划线 颜色 变换 首先 要 用到 style.xml 文件 , 新建 自定义 EditText 控件 style  res->values->style.xml  添加     `xml        @android:color/white        @android:color/holobluedark    `     不 点击 时 设置 white, 点击 时 设置 blue 然后 在 布局 中 的 EditText 控件 中 添加 theme 属性     android:theme=\"@style/MyEditText\"    `xml    ` 效果  :","title":"Android EditText 下划线 颜色 变换 ","oriTitle":"Android EditText下划线颜色变换"},{"uri":"\\posts\\android-custom-dialog-to-achieve-sex%2Cdate%2Cand-listen-edittext-","tags":["Dialog"],"content":"Android  自定义  Dialog , 实现   性别 选择 , 日期 选择 和   自定义 布局 获取 EditText 内容 > Dialog 类 是 对话框 的 基类 , 但是 应该 避免 直接 实例 化 Dialog, 而是 应该 尽量 使用 下列 子 列 之一  :> AlertDialog 此 对话框 可 显示 标题 、 最 多 三个 按钮 、 可 选择项 列表 或 自定义 布局 。DatePickerDialog  或  TimePickerDialog 此 对话框 带有 允许 用户 选择 日期 或 时间 的 预定 义  UI。------------------------------------------------ 来自 于 Google Android Develop  开发 手册 日期 选择器 这里 我们 用到 了 Android 原生 提供 的 日期 选择器 对话框  DatePickerDialog 首先 你 可以 先 设定 一个 date, 让 DatePickerDialog  点击 时 显示 你 设定 的 时间 . 通常 我们 都 是 获取 当前 date 来 显示 . 所以 我们 要 用到 calender 来 获取 当前 date`javaCalendar nowdate = Calendar.getInstance();int mYear = nowdate.get(Calendar.YEAR);int mMonth = nowdate.get(Calendar.MONTH);int mDay = nowdate.get(Calendar.DAYOFMONTH);` 然后 你 可以 在 按钮  onClick()  点击 事件 中 设置 触发  DatePickerDialog     传入 五个 参数  parent context , 监听器 , 年 , 月 , 日 `javanew DatePickerDialog(MainActivity.this, onDateSetListener, mYear, mMonth, mDay).show();` 设置 日期 选择器 对话框 的 监听器  , DatePickerDialog.OnDateSetListener  void onDateSet (DatePicker view,                int year,                int month,                int dayOfMonth)   将 获取 到 的 date 转换成 字符串 显示 到 textview`javaprivate DatePickerDialog.OnDateSetListener onDateSetListener = new DatePickerDialog.OnDateSetListener() {        @Override        public void onDateSet(DatePicker view, int year, int monthOfYear, int dayOfMonth) {            int mYear = year;            int mMonth = monthOfYear;            int mDay = dayOfMonth;            TextView datetextview = (TextView) findViewById(R.id.changebirthtextview);            String days;            days = new StringBuffer().append(mYear).append(\" 年 \").append(mMonth).append(\" 月 \").append(mDay).append(\" 日 \").toString();            date_textview.setText(days);        }    };`>  参考 自 Google Android Develop DatePickerDialog 性别 选择器 首先 我们 要 创建 一个 数组 , 来 提供 选择 的 选项   `java  private String[] sexArry = new String[]{\" 不 告诉 你 \", \" 女 \", \" 男 \"};//  性别 选择   ` 设置 点击 事件 后 , 实现 性别 选择器 的 方法  , 这里 我们 使用 了 AlertDialog`javaprivate void showSexChooseDialog() {        AlertDialog.Builder builder3 = new AlertDialog.Builder(this);//  自定义 对话框         builder3.setSingleChoiceItems(sexArry, 0, new DialogInterface.OnClickListener() {// 2 默认 的 选中             @Override            public void onClick(DialogInterface dialog, int which) {// which 是 被 选中 的 位置                 // showToast(which+\"\");                changesex_textview.setText(sexArry[which]);                dialog.dismiss();//  随便 点击 一个 item 消失 对话框 ， 不用 点击 确认 取消             }        });        builder3.show();//  让 弹 出 框 显示     }` 自定义 Dialog  布局 , 获取 EditText 输入框 的 数据 使用 使用 LayoutInflater 来 加载 dialog_setname.xml 布局 初始化 AlertDialog, 使用 setView() 方法 将 自定义 View 显示 到 dialog 设置 AlertDialog 的 按钮 , 设置 点击 事件 来   获取 EditText 输入框 的 内容 , 然后 设置 TextView 的 内容 . 布局 文件 `xml` 自定义 Dialog 获取 输入框 内容 方法 `javaprivate void onCreateNameDialog() {        //  使用 LayoutInflater 来 加载 dialog_setname.xml 布局         LayoutInflater layoutInflater = LayoutInflater.from(this);        View nameView = layoutInflater.inflate(R.layout.dialog_setname, null);        AlertDialog.Builder alertDialogBuilder = new AlertDialog.Builder(                this);        //  使用 setView() 方法 将 布局 显示 到 dialog        alertDialogBuilder.setView(nameView);        final EditText userInput = (EditText) nameView.findViewById(R.id.changename_edit);        final TextView name = (TextView) findViewById(R.id.changename_textview);        //  设置 Dialog 按钮         alertDialogBuilder                .setCancelable(false)                .setPositiveButton(\"OK\",                        new DialogInterface.OnClickListener() {                            public void onClick(DialogInterface dialog, int id) {                                //  获取 edittext 的 内容 , 显示 到 textview                                name.setText(userInput.getText());                            }                        })                .setNegativeButton(\"Cancel\",                        new DialogInterface.OnClickListener() {                            public void onClick(DialogInterface dialog, int id) {                                dialog.cancel();                            }                        });        // create alert dialog        AlertDialog alertDialog = alertDialogBuilder.create();        // show it        alertDialog.show();    }` 通常 的 AlertDialog   实现 退出 账号 效果 设置 Yes 和 Cancel 按钮 和 点击 事件 `javaAlertDialog.Builder builder1 = new AlertDialog.Builder(MainActivity.this);builder1.setMessage(\" 确定 退出 账号 ?\")        .setPositiveButton(\"Yes\", new DialogInterface.OnClickListener() {              public void onClick(DialogInterface dialog, int id) {                  finish();  //  这里 使用 finish()  模拟 下 退出 账号 ~              }        })        .setNegativeButton(\"No\", new DialogInterface.OnClickListener() {              public void onClick(DialogInterface dialog, int id) {                  // User cancelled the dialog              }        });// Create the AlertDialog object and return itbuilder1.show();` 城市 选择器 目前 还 没有 实现 ...  但是 我 在 看 Github 上 的 citypicker   目前 还 在 学习 中 , 如果 有 实现 的 可以 讨论一下 .> Google Android Develop Dialog","title":"Android  自定义  Dialog","oriTitle":"Android 自定义 Dialog"},{"uri":"\\posts\\android-studio-gradle-the-program-of-download","tags":["Gradle","Android"],"content":" 安装 Android Studio  时 遇到   Buileing \"xxx\" Gradle project info  的 解决 方法 我 第一次 启动 Android Studio 的 时候 , 遇到  Grale  一直 下载 不 下来 , 后来 找到 解决 方法  1. 首先 在  C:\\Users\\ 用户名 \\.gradle\\wrapper\\dists  文件夹 中 查看 需要 下载 那个 版本 的 Gradle 2. 之后 去 http://services.gradle.org/distributions/   下载 你 需要 的 版本  3. 下载 后 ， 将 压缩包 放到   C:\\Users\\ 用户名 \\.gradle\\wrapper\\dists\\gradle-x.x-all\\xxxxxxxxxxxxxxx 4. 重写 启动 Studio 即可 ","title":" 解决 Android Studio Gradle  下载 问题 ","oriTitle":"解决Android Studio Gradle 下载问题"},{"uri":"\\posts\\android-studio-thewaytosolveslow","tags":["Studio","Android"],"content":" 解决 Android Studio 太卡 的 方法 修改 Java  虚拟机 启动 时 的 参数 ， 用于 限制 最大 堆 内 存在 Android Studio Help->Edit Custom VM Option    打开 在 这里 加上   -Xmx2g  或者  -Xmx4g 如何 查看 生效 呢 ？Settings 设置 重新启动 Android Studio  在 右下角 看 是否 显示 内存 使用 情况 还有 不 懂得 可以 查看 官方 文档 ：🔎developer.android","title":" 解决 Android Studio 太卡 的 方法 ","oriTitle":"解决Android Studio太卡的方法"},{"uri":"\\posts\\color.xml-resource-file","tags":["Android Values","Android"],"content":"colors.xml 资源 文件 在 开发者 进行 android 开发 的 时候 , 往往 要 设置 很多 颜色 , 通常 使用 RGB 颜色 比如    代表 绿色 但是 一个 项目 有 很多 地方 要 使用 的 不同 颜色 , 这么 多 RGB 值 会 搞 混淆 , 所以 可以 使用 color.xml 文件 给 指定 颜色 命名 打开 res->values->colors.xml 添加  : 然后 在 控件 属性 可以 添加 color","title":"Android colors.xml 资源 文件 ","oriTitle":"Android colors.xml资源文件"},{"uri":"\\posts\\data_structure_mindmap","tags":[],"content":"Data Structure  数据结构 思维 导 图 整理 >  这个 思维 导 图 根据 自 中国大学 MOOC 的 浙大 数据结构 课 的 目录 . 目前 我 还是 好多 没有 掌握 树 的 那 一块 , 递归函数 要 多 理解 . 指针 和 类型定义 图 散 列 > 已经 报名 了 2018 年 3 月 的 春季 PAT 考试 , 希望 在 寒假 的 时候 啃 完 晴 神 宝典 , 在 考试 考 到 50 分 .😝","title":"Data Structure  思维 导 图 ","oriTitle":"Data Structure 思维导图"},{"uri":"\\posts\\git-and-github","tags":["git","github"],"content":"Git  和  Github 的 使用 札记 git    git init   //  创建 本地 仓库     git status //  掌握 仓库 当前 的 状态     git add    //  添加 修改 文件 到 stage    git commit -m\"text\"//  提交 文件 到 Git 仓库 github    git remote add origin git@github.com:username/repository.git  //  让 本地 仓库 与 远程 仓库 连接     git clone  git@github.com:username/repository.git  //  从 远程 仓库 clone    git push -u origin master //  推送 本地 仓库 文件 到 远程 仓库     git push -f origin master //  强制 推送 创建 SSH KEY    ssh-keygen -t rsa -C \"youremail@example.com\" 在 系统 用户 主目录 找到 .ssh 文件夹 , 复制 id_rsb.pub 内容 , 添加 到  https://github.com/settings/keys 连接 多个 远程 仓库     git remote -v  //  查看 目前 远程 库 信息     git remote rm origin //  删除 远程 库     git remote add github git@github.com:username/repository.git  //  关联 github    git remote add gitee git@github.com:username/repository.git  //  关联 gitee    // 推送     git push github master    git push gitee master 自定义  git    .gitignore  //  配置 .gitignore  忽略 特殊 文件     // 设置 别名     $ git config --global alias.st status    $ git config --global alias.co checkout    $ git config --global alias.ci commit    $ git config --global alias.br branch","title":"Git 和 Github 使用 札记 ","oriTitle":"Git和Github使用札记"},{"uri":"\\posts\\translucent-bar-immersive-bar","tags":["Android"],"content":" 如何 做到 沉浸 式 状态栏 --- 更加 准确 的 说 是 透明 状态栏  Translucent Bar 设置 imageView 图片   高 宽  match_parent   但是 没有 隐藏 ActionBar 效果 : 透明 状态栏 和 隐藏 ActionBar 在 activity 文件 中 添加 `java//  显示 activity_main 布局 super.onCreate(savedInstanceState);setContentView(R.layout.activity_main);// 透明 状态栏 if (Build.VERSION.SDK_INT >= 21) {    View decorView = getWindow().getDecorView();    int option = View.SYSTEMUIFLAGLAYOUTFULLSCREEN            | View.SYSTEMUIFLAGLAYOUTSTABLE;    decorView.setSystemUiVisibility(option);    getWindow().setStatusBarColor(Color.TRANSPARENT);}//  隐藏 系统 自带 应用 栏 ActionBar actionBar = getSupportActionBar();actionBar.hide();` 这种 效果 只有 5.0 及 以上 系统 支持 使用 了 SYSTEMUIFLAGLAYOUTFULLSCREEN 和 SYSTEMUIFLAGLAYOUTSTABLE， 注意 两个 Flag 必须 要 结合 在 一起 使用 ， 表示 会 让 应用 的 主体 内容 占用 系统 状态栏 的 空间 最后 再 调用 Window 的 setStatusBarColor() 方法 将 状态栏 设置 成 透明 色 就 可以 了 。>  需要 注意 的 是 ， 这 一种 变成 透明 状态栏 的 方法 要 注意 你 设置 的 自定义 的 ActionBar( 一般 为 56dp) 的 高度 要 加上 状态栏 的 高度 （ 一般 为 20dp) 效果 ：","title":"Android  沉浸 式 状态栏 ","oriTitle":"Android 沉浸式状态栏"}]